# Generated by Django 5.1.7 on 2025-04-14 13:48

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('content', '0004_comment_upvotes_marker_damage_assessment_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='DetectionConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detector_type', models.CharField(max_length=50, unique=True)),
                ('display_name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, max_length=100)),
                ('is_enabled', models.BooleanField(default=True)),
                ('order', models.IntegerField(default=0)),
                ('config', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'ordering': ['order', 'detector_type'],
            },
        ),
        migrations.CreateModel(
            name='Detection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detector_type', models.CharField(max_length=50)),
                ('model_name', models.CharField(max_length=100)),
                ('summary', models.TextField(blank=True)),
                ('image_path', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('marker_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detections', to='content.markerfile')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('marker_file', 'detector_type')},
            },
        ),
        migrations.CreateModel(
            name='ClassificationResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100)),
                ('confidence', models.FloatField()),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('detection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classifications', to='detection.detection')),
            ],
            options={
                'ordering': ['-confidence'],
            },
        ),
        migrations.CreateModel(
            name='ObjectDetection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100)),
                ('confidence', models.FloatField()),
                ('x_min', models.FloatField()),
                ('y_min', models.FloatField()),
                ('x_max', models.FloatField()),
                ('y_max', models.FloatField()),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('detection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='objects', to='detection.detection')),
            ],
            options={
                'ordering': ['-confidence'],
            },
        ),
        migrations.CreateModel(
            name='SegmentationMask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100)),
                ('mask_path', models.CharField(max_length=255)),
                ('confidence', models.FloatField()),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('detection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='segmentation_masks', to='detection.detection')),
            ],
        ),
    ]
